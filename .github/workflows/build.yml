name: Build
on:
  push:
    tags: [v*]

env:
  LIBRARY_PATH: addons/godot-wasm/bin
  RELEASE_ASSET: godot-wasm.zip
  WASMER_VERSION: '2.3.0'

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt -y install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev \
            libudev-dev libxi-dev libxrandr-dev yasm

      - name: Setup Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configuring Python Packages
        run: python -m pip install scons

      - name: Download Wasmer Library
        run: |
          mkdir ${{ github.workspace }}/wasmer
          wget -c https://github.com/wasmerio/wasmer/releases/download/${{ env.WASMER_VERSION }}/wasmer-linux-musl-amd64.tar.gz -O - | tar -xz -C wasmer

      - name: Submodule Hash
        run: echo "SUBMODULE_HASH=$( git rev-parse HEAD:godot-cpp )" >> $GITHUB_ENV

      - name: Cache Godot Library
        id: cache-godot-cpp
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/godot-cpp/bin
            ${{ github.workspace }}/godot-cpp/include
            ${{ github.workspace }}/godot-cpp/godot-headers/**/*.h
          key: ${{ runner.os }}-${{ env.SUBMODULE_HASH }}-${{ secrets.GODOT_CPP_CACHE_VERSION }}

      - name: Compile Godot Library
        if: steps.cache-godot-cpp.outputs.cache-hit != 'true'
        run: |
          cd ${{ github.workspace }}/godot-cpp
          scons platform=linux generate_bindings=yes -j4

      - name: Compile Addon
        run: scons platform=linux

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: ${{ github.workspace }}/${{ env.LIBRARY_PATH }}/linux
          if-no-files-found: error

  release:
    name: Release
    needs: [build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/${{ env.LIBRARY_PATH }}

      - name: dummy
        run: ls -R

      - name: Prepare Asset
        run: zip -r ${{ env.RELEASE_ASSET }} .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ github.workspace }}/${{ env.RELEASE_ASSET }}
